[package]
name = "swiftness"
description = "Swiftness - Rust CairoVM Verifier implementation"
edition = "2021"
license-file = "LICENSE"
readme = "../README.md"
repository = "https://github.com/iosis-tech/swiftness"
version = "0.0.7"

[dependencies]
anyhow = "1"
cairo-felt = "0.9"
cairo-proof-parser = { git = "https://github.com/Okm165/cairo-proof-parser", rev = "97a04bbee07330311b38d6f4cecfed3acb237626" }
clap = { version = "4.4.4", features = ["derive"] }
itertools = "0.13.0"
num-bigint = "0.4.4"
num-traits = "0.2.19"
serde = { version = "1", features = ["derive"] }
serde_json = "1"
starknet-crypto = { version = "0.7.1", default-features = false }
swiftness_air = { path = "../crates/air", default-features = false, features = [
    "std",
], version = "0.0.7" }
swiftness_stark = { path = "../crates/stark", default-features = false, features = [
    "std",
], version = "0.0.7" }
swiftness_proof_parser = { path = "../proof_parser", default-features = false, features = [
    "std",
], version = "0.0.7" }
swiftness_fri = { path = "../crates/fri", default-features = false, features = [
    "std",
], version = "0.0.7" }
thiserror = "1.0"

[features]
default = ["recursive", "keccak"]
dex = ["swiftness_air/dex", "swiftness_stark/dex"]
recursive = ["swiftness_air/recursive", "swiftness_stark/recursive"]
recursive_with_poseidon = [
    "swiftness_air/recursive_with_poseidon",
    "swiftness_stark/recursive_with_poseidon",
]
small = ["swiftness_air/small", "swiftness_stark/small"]
starknet = ["swiftness_air/starknet", "swiftness_stark/starknet"]
starknet_with_keccak = [
    "swiftness_air/starknet_with_keccak",
    "swiftness_stark/starknet_with_keccak",
]
keccak = [
    "swiftness_air/keccak",
    "swiftness_stark/keccak",
    "swiftness_proof_parser/keccak"
]
blake2s = [
    "swiftness_air/blake2s",
    "swiftness_stark/blake2s",
    "swiftness_proof_parser/blake2s"
]
